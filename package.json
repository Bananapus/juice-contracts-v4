{
  "name": "@jbx-protocol/juice-contracts-v4",
  "bugs": {
    "url": "https://github.com/jbx-protocol/juice-contracts-v4/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jbx-protocol/juice-contracts-v4"
  },
  "version": "0.0.0",
  "license": "MIT",
  "dependencies": {
    "@chainlink/contracts": "^0.1.6",
    "@paulrberg/contracts": "^3.4.0",
    "@openzeppelin/contracts": "^4.5.0-rc.0"
  },
  "devDependencies": {
    "@defi-wonderland/smock": "^2.2.0",
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@nomiclabs/hardhat-etherscan": "^2.1.4",
    "@nomiclabs/hardhat-waffle": "^2.0.1",
    "chai": "^4.3.4",
    "dotenv": "^10.0.0",
    "esm": "^3.2.25",
    "ethereum-waffle": "^3.4.0",
    "ethers": "^5.7.0",
    "glob": "^7.2.0",
    "hardhat": "^2.9.3",
    "hardhat-deploy": "^0.9.1",
    "hardhat-deploy-ethers": "^0.3.0-beta.10",
    "hardhat-gas-reporter": "^1.0.4",
    "prettier": "^2.4.0",
    "prettier-plugin-solidity": "^1.0.0-beta.19",
    "solhint": "^3.3.6",
    "solhint-plugin-prettier": "^0.0.5",
    "solidity-coverage": "^0.8.0-beta.1"
  },
  "scripts": {
    "test": "yarn test:local && yarn test:fork && yarn test:unit",
    "test:unit": "yarn clean && hardhat compile && mocha './test/**/*.test.js' -r esm --bail --timeout 20000 && yarn clean",
    "test:local": "forge test",
    "test:fork": "FOUNDRY_PROFILE=CI forge test",
    "coverage": "node --require esm ./node_modules/.bin/hardhat coverage --network hardhat",
    "coverage:integration": "forge coverage --match-path ./src/*.sol --report lcov --report summary",
    "build": "forge build",
    "size": "forge build --sizes",
    "clean": "rm -rf ./cache && rm -rf ./artifacts",
    "doc": "forge doc",
    "tree": "forge tree",
    "lint": "forge fmt",
    "deploy:mainnet": "source .env && forge script DeployMainnet --chain-id 1 --rpc-url $RPC_MAINNET --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_MAINNET -vvv",
    "deploy:goerli": "source .env && forge script DeployGoerli --chain-id 5 --rpc-url $RPC_GOERLI --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_GOERLI -vvv"
  }
}
{
  "name": "@jbx-protocol/juice-contracts-v3",
  "bugs": "https://github.com/bananapus/juice-contracts-v4/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/bananapus/juice-contracts-v4"
  },
  "version": "1.0.0",
  "license": "MIT",
  "scripts": {
    "preinstall": "if [ \"$CI\" != \"true\" ]; then forge install; fi",
    "test": "forge test",
    "test:fork": "FOUNDRY_PROFILE=CI forge test",
    "size": "forge build --sizes",
    "coverage": "forge coverage --match-path ./src/*.sol --report lcov --report summary",
    "doc": "forge doc",
    "tree": "forge tree",
    "deploy:ethereum-mainnet": "source .env && forge script DeployEthereumMainnet --chain-id 1 --rpc-url $RPC_ETHEREUM_MAINNET --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_ETHEREUM_MAINNET -vvv",
    "deploy:ethereum-goerli": "source .env && forge script DeployGoerli --chain-id 5 --rpc-url $RPC_ETHEREUM_GOERLI --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_ETHEREUM_GOERLI -vvv",
    "deploy:ethereum-sepolia": "source .env && forge script DeploySepolia --chain-id 5 --rpc-url $RPC_ETHEREUM_SEPOLIA --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_ETHEREUM_SEPOLIA -vvv",
    "deploy:optimism-mainnet": "source .env && forge script DeployOptimismMainnet --chain-id 1 --rpc-url $RPC_OPTIMISM_MAINNET --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_OPTIMISM_MAINNET -vvv",
    "deploy:optimism-testnet": "source .env && forge script DeployOptimismTestnet --chain-id 1 --rpc-url $RPC_OPTIMISM_TESTNET --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_OPTIMISM_TESTNET -vvv",
    "deploy:polygon-mainnet": "source .env && forge script DeployPolygonMainnet --chain-id 1 --rpc-url $RPC_POLYGON_MAINNET --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_POLYGON_MAINNET -vvv",
    "deploy:polygon-mumbai": "source .env && forge script DeployPolygonMumbai --chain-id 1 --rpc-url $RPC_POLYGON_MUMBAI --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY --ledger --sender $SENDER_POLYGON_MUMBAI -vvv",
    "lint": "forge fmt",
    "imports": "bash ./utils/unused-imports.sh",
    "errors": "python ./utils/unused-errors.py",
    "unimported": "python ./utils/check-used.py"
  }
}